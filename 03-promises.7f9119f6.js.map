{"mappings":"AAkCA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,aAAY,KACNN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EA1CA,CAIXQ,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOC,OAAOH,EAAMI,OAAOC,SAASH,KAAKI,OAC/C,IAAIC,EAAQJ,OAAOH,EAAMI,OAAOC,SAASjB,MAAMkB,OAC/C,MAAME,EAASR,EAAMI,OAAOC,SAASG,OAAOF,MAE5C,IAAK,IAAIG,EAAQ,EAAGA,GAASD,EAAQC,GAAS,EAC5CvB,EAAcuB,EAAOF,GAClBG,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,MAAU,IAE7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,MAAU,IAE7DmB,GAASL,EAGXS,QAAQG,IAAId,EAAMI,O,KA8BpB,SAAsBW,GACpB,MAAMC,IAAEA,EAAGC,OAAEA,GAAWF,EAExBJ,QAAQC,IAAII,EAAKC,E,CAGnBC,CAjBa,CACXC,SAAU,WACVC,SAAU,OACVC,IAAK,GACLL,IAAK,MACLC,OAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["// const delayEl = document.querySelector('[name=\"delay\"]');\n\nconst refs = {\n  // delayEl: document.querySelector('[name=\"delay\"]'),\n  // stepEl: document.querySelector('[name=\"step\"]'),\n  // amountEl: document.querySelector('[name=\"amount\"]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const step = Number(event.target.elements.step.value);\n  let delay = Number(event.target.elements.delay.value);\n  const amount = event.target.elements.amount.value;\n\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  console.dir(event.target);\n}\n\n//console.log(refs.delayEl, refs.amountEl, refs.stepEl);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst user = {\n  userName: 'userName',\n  lastName: 'test',\n  age: 20,\n  job: 'Dev',\n  salary: 1,\n};\n\n// function showUserInfo({ age, lastName, userName }) {\n//   console.log(`${userName} ${lastName} ${age}`);\n// }\nfunction showUserInfo(user) {\n  const { job, salary } = user;\n\n  console.log(job, salary);\n}\n\nshowUserInfo(user);\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","formEl","document","querySelector","addEventListener","event","preventDefault","step","Number","target","elements","value","delay1","amount","index","then","console","log","catch","dir","user1","job","salary","$47d4ff9957288465$var$showUserInfo","userName","lastName","age"],"version":3,"file":"03-promises.7f9119f6.js.map"}