{"mappings":"YAkCA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,aAAY,WACNN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KA1CM,CAIXQ,OAAQC,SAASC,cAAc,WAG5BF,OAAOG,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAOC,OAAOH,EAAMI,OAAOC,SAASH,KAAKI,OAC3CC,EAAQJ,OAAOH,EAAMI,OAAOC,SAASjB,MAAMkB,OACzCE,EAASR,EAAMI,OAAOC,SAASG,OAAOF,MAEnCG,EAAQ,EAAGA,GAASD,EAAQC,GAAS,EAC5CvB,EAAcuB,EAAOF,GAClBG,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,QAAQC,IAAI,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE3D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,QAAQC,IAAI,sBAAqCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE3DmB,GAASL,EAGXU,QAAQI,IAAIhB,EAAMI,O,IAmBpB,IAWsBa,EACZC,EAAKC,EAALD,GADYD,EAXT,CACXG,SAAU,WACVC,SAAU,OACVC,IAAK,GACLJ,IAAK,MACLC,OAAQ,IAOAD,IAAKC,EAAWF,EAAXE,OAEbP,QAAQC,IAAIK,EAAKC,E","sources":["src/js/03-promises.js"],"sourcesContent":["// const delayEl = document.querySelector('[name=\"delay\"]');\n\nconst refs = {\n  // delayEl: document.querySelector('[name=\"delay\"]'),\n  // stepEl: document.querySelector('[name=\"step\"]'),\n  // amountEl: document.querySelector('[name=\"amount\"]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const step = Number(event.target.elements.step.value);\n  let delay = Number(event.target.elements.delay.value);\n  const amount = event.target.elements.amount.value;\n\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  console.dir(event.target);\n}\n\n//console.log(refs.delayEl, refs.amountEl, refs.stepEl);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst user = {\n  userName: 'userName',\n  lastName: 'test',\n  age: 20,\n  job: 'Dev',\n  salary: 1,\n};\n\n// function showUserInfo({ age, lastName, userName }) {\n//   console.log(`${userName} ${lastName} ${age}`);\n// }\nfunction showUserInfo(user) {\n  const { job, salary } = user;\n\n  console.log(job, salary);\n}\n\nshowUserInfo(user);\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","formEl","document","querySelector","addEventListener","event","preventDefault","step","Number","target","elements","value","delay1","amount","index","then","param","console","log","concat","catch","dir","user1","job","salary","userName","lastName","age"],"version":3,"file":"03-promises.6e0678b5.js.map"}